import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import {api } from "y/utils/api";
import type { RouterOutputs} from "y/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "y/components/loading";
import { useState } from "react";
dayjs.extend(relativeTime);


const CreatePostWizard = () => {
  const { user } = useUser();

  const [input,setInput] = useState("");

  const ctx = api.useContext();

  const {mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: ()=>{
      setInput("");
      void ctx.posts.getAll.invalidate();
    }
  });

  if (!user) return null;
  return <div className="flex gap-3 w-full">
    <Image 
    src={user.profileImageUrl} 
    alt="Profile image" 
    className="w-14 h-14 rounded-full"
    width={56}
    height={56} 
    />
    <input  
      placeholder="Type some emojis!" 
      className="bg-transparent grow outline-none" 
      type="text"
      value={input}
      onChange={(e)=>setInput(e.target.value)}
      disabled = {isPosting}
     />
     <button onClick={()=>mutate({content:input})}>Post</button>
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  
  return (
    <div className="p-4 border-b border-slate-400 flex gap-3" key={props.post.id}>
      <Image 
      className="w-14 h-14 rounded-full" 
      src={author.profilepicture} 
      alt={`@${author.username}'s profile pciture`}
      width={56}
      height={56}
       />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>  {`@${author.username!}`}</span>
          <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow() }`}</span>
        </div>
        <span className="text-2xl">  {post.content}</span>
      </div>
    </div>
  )
}
const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading)
    return (
      <div className="flex grow">
        <LoadingPage />
      </div>
    );

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex grow flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};



const Home: NextPage = () => {
  const {user, isLoaded: userLoaded,isSignedIn} = useUser();

  //Start Fetching asap
  api.posts.getAll.useQuery();

  //Return Emprty div if user isn't loaded yer
  if (!userLoaded ) return <div></div>;


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center ">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 flex">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {!!isSignedIn && <CreatePostWizard />}
          </div>
              <Feed />
        </div>
      </main>
    </>
  );
}

export default Home;